/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  IndustryPartnership as PrismaIndustryPartnership,
} from "@prisma/client";

export class IndustryPartnershipServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IndustryPartnershipCountArgs, "select">
  ): Promise<number> {
    return this.prisma.industryPartnership.count(args);
  }

  async industryPartnerships(
    args: Prisma.IndustryPartnershipFindManyArgs
  ): Promise<PrismaIndustryPartnership[]> {
    return this.prisma.industryPartnership.findMany(args);
  }
  async industryPartnership(
    args: Prisma.IndustryPartnershipFindUniqueArgs
  ): Promise<PrismaIndustryPartnership | null> {
    return this.prisma.industryPartnership.findUnique(args);
  }
  async createIndustryPartnership(
    args: Prisma.IndustryPartnershipCreateArgs
  ): Promise<PrismaIndustryPartnership> {
    return this.prisma.industryPartnership.create(args);
  }
  async updateIndustryPartnership(
    args: Prisma.IndustryPartnershipUpdateArgs
  ): Promise<PrismaIndustryPartnership> {
    return this.prisma.industryPartnership.update(args);
  }
  async deleteIndustryPartnership(
    args: Prisma.IndustryPartnershipDeleteArgs
  ): Promise<PrismaIndustryPartnership> {
    return this.prisma.industryPartnership.delete(args);
  }
}
